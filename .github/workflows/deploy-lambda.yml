name: Deploy Lambda and Infrastructure

on:
  push:
    branches:
      - main

jobs:
  package-lambda:
    runs-on: ubuntu-latest
    outputs:
      code-path: ${{ steps.set-code-output.outputs.code-path }}
      layer-path: ${{ steps.set-layer-output.outputs.layer-path }}

    env:
      LAMBDA_NAME: pdfextractor
      LAMBDA_SOURCE_DIR: pdfextractor
      LAYER_OUTPUT: terraform/layer.zip
      CODE_OUTPUT: terraform/deployment.zip

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Setup uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"

      # Crea layer.zip (con solo le dipendenze)
      - name: Install dependencies in layer structure
        working-directory: ${{ env.LAMBDA_SOURCE_DIR }}
        run: |
          uv export --project="${{ env.LAMBDA_NAME }}" --no-editable --no-dev
          mkdir -p ../lambda-layer/python
          uv export --project="${{ env.LAMBDA_NAME }}" --no-editable --no-dev | \
          uv pip install \
            --no-compile-bytecode \
            --python 3.12 \
            --target ../lambda-layer/python \
            -r requirements.txt

      - name: Zip Lambda Layer
        run: |
          cd lambda-layer
          zip -r ../layer.zip .
          cd ..
      
      - name: Set layer output
        id: set-layer-output
        run: echo "layer-path=${{ env.LAYER_OUTPUT }}" >> "$GITHUB_OUTPUT"

      # Crea deployment.zip (solo codice sorgente)
      - name: Package Lambda function code only
        run: |
          mkdir -p lambda-code
          cp -r ${{ env.LAMBDA_SOURCE_DIR }}/* lambda-code/
          cd lambda-code
          zip -r ../deployment.zip .
          cd ..

      - name: Set code output
        id: set-code-output
        run: echo "code-path=${{ env.CODE_OUTPUT }}" >> "$GITHUB_OUTPUT"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: lambda-artifacts
          path: |
            deployment.zip
            layer.zip

  deploy-infrastructure:
    runs-on: ubuntu-latest
    needs: package-lambda

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Download Lambda artifacts
        uses: actions/download-artifact@v4
        with:
          name: lambda-artifacts
          path: terraform

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.4

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Terraform Plan
        working-directory: terraform
        run: terraform plan -out plan.out

      - name: Terraform Apply
        working-directory: terraform
        run: terraform apply plan.out

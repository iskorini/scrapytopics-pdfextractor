name: Deploy Lambda and Infrastructure

on:
  push:
    branches:
      - main

jobs:
  package-lambda:
    runs-on: ubuntu-latest
    outputs:
      package-path: ${{ steps.set-output.outputs.package-path }}

    env:
      LAMBDA_NAME: pdfextractor
      SITE_PACKAGES: python
      PACKAGE_OUTPUT: terraform/deployment.zip

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Setup uv
        uses: astral-sh/setup-uv@v1

      - name: Clean old package
        working-directory: pdfextractor
        run: rm -rf lambda-package python ${{ env.PACKAGE_OUTPUT }}

      - name: Export & Install Lambda dependencies
        working-directory: pdfextractor
        run: |
          uv export --project="${env.LAMBDA_NAME}" --no-editable --no-dev | \
          uv pip install \
            --no-installer-metadata \
            --no-compile-bytecode \
            --python-platform x86_64-manylinux2014 \
            --python 3.12 \
            --target "${{ env.SITE_PACKAGES }}" \
            -r requirements.txt

      - name: Copy Lambda source code
        run: |
          mkdir -p python
          cp -r ${{ env.LAMBDA_NAME }}/* python/

      - name: Zip Lambda package
        run: |
          cd python
          zip -r ../deployment.zip .
          cd ../..

      - name: Move deployment.zip to terraform dir
        id: set-output
        run: |
          mkdir -p $(dirname "${{ env.PACKAGE_OUTPUT }}")
          mv deployment.zip "${{ env.PACKAGE_OUTPUT }}"
          echo "package-path=${{ env.PACKAGE_OUTPUT }}" >> "$GITHUB_OUTPUT"

  deploy-infrastructure:
    runs-on: ubuntu-latest
    needs: package-lambda

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.4

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Terraform Plan
        working-directory: terraform
        run: terraform plan -out plan.out

      - name: Terraform Apply
        working-directory: terraform
        run: terraform apply plan.out
